import java.util.*;
import java.io.*;
import java.math.*;
import java.io.InputStream;

class  Solution{
    public static void main(String[] argh) throws Exception{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t= Integer.parseInt(br.readLine().trim());
        for(int i=0; i<t; i++){
            String[] inp= br.readLine().trim().split(" ");
            int n= Integer.parseInt(inp[0]);
            int k= Integer.parseInt(inp[1]);
            int m= Integer.parseInt(inp[2]);
            String[] inp1= br.readLine().trim().split(" ");
            String[] inp2= br.readLine().trim().split(" ");
            int[] diff= new int[n];
            for(int j=0; j<n; j++){
                diff[j]= (int)(Integer.parseInt(inp1[j]) - Integer.parseInt(inp2[j]));
            }
            Arrays.sort(diff);
            String[] inp3= br.readLine().trim().split(" ");
            String[] inp4= br.readLine().trim().split(" ");
            PriorityQueue<CHEFTMA> pq= new PriorityQueue<>();
            for(int j=0; j<k; j++){
                int aa= Integer.parseInt(inp3[j]);
                CHEFTMA c= new CHEFTMA(aa);
                pq.add(c);
            }
            for(int j=0; j<m; j++){
                int aa= Integer.parseInt(inp4[j]);
                CHEFTMA c= new CHEFTMA(aa);
                pq.add(c);
            }
            long sum= 0;
            
            for(int j=n-1; j>=0; j--){
                // System.out.println(diff[j]);
                int aq= diff[j];
                while(pq.size()!= 0 && pq.peek().num > aq){
                    pq.poll();
                }
                if(pq.size() == 0){
                    sum += aq;
                }
                else{
                    int kk= pq.poll().num;
                    sum += (long)(aq - kk);
                }
                
            }
            System.out.println(sum);
        }
    }
    
    private static class CHEFTMA implements Comparable<CHEFTMA>{
        int num;
        public CHEFTMA(int num) {this.num= num;}
        public int compareTo(CHEFTMA c){
            if(c.num > this.num) return 1;
            else if(c.num < this.num) return -1;
            else return 0;
        }
    }
}
